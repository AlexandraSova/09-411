const
  n = 5;

type
  matrix1 = array[1..n, 1..n] of real;
  bool = array[1..n, 1..n] of boolean;

procedure matrix(var e: matrix1);
var
  i, j: integer;
begin
  for i := 1 to n do 
    for j := 1 to n do 
      read(E[i, j]);
end;

procedure predicate(var b: bool; e: matrix1);
var
  i, j: integer;
begin
  for i := 1 to n do
    for j := i to n do
      if (i < j) and (e[i, j] < e[j, i]) then b[i, j] := true;
end;

procedure conversion(var x: real; e: real);
begin
  x := exp(3.4 * ln(e));
end;

procedure MatrixX(b: bool; var x: matrix1; e: matrix1);
var
  i, j: integer;
begin
  for i := 1 to n do
    for j := 1 to n do
      if b[i, j] = true then conversion(X[i, j], E[i, j]) else X[i, j] := E[i, j];
end;

procedure print(a: matrix1);
var
  i, j: integer;
begin
  for i := 1 to n do 
  begin
    for j := 1 to n do
      write(a[i, j]:3:2, ' ');
    writeln();
  end;
end;

var
  E, X: matrix1;
  b: bool;

begin
  matrix(E);
  predicate(b, E);
  MatrixX(b, X, E);
  print(E);
  print(X);
end.
