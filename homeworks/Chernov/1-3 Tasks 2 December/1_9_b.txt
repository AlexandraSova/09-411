Доказываю:
Тащемто, свойство степеней - a^x = (a^n)^m, где m*n=x, a - действительное, а x - натуральное.
Далее, x^n = (x^(n/2))^2 = x^(n/2)*x^(n/2), если n - четно.
Нет, тогда переходим к четному n: x^n = x^(n-1) * x.
Вобщем-то на этом и основывается программа.
Кол-во действий:
В этом алгоритме мы от n переходим к n/2, если n - четно, иначе переходим к n-1 => алгоритм выполняется, примерно, за 2*log(n) умножений.
3 задание не до конца понял. Некорректна формулировка. Бинарное возведение тоже выражается через операции вычитания и умножения.
Если выполнять 3 в лоб, то есть, просто умножать число на число в цикле, а из степени вычитать 1, пока степень не уйдет в ноль, то алгоритм выполниться за n умножений.
n > 2*log(n)
Конец.